<!DOCTYPE html>
<html>
<head>
  <title>In App Messages For Web</title>
  <script  src="https://cdn1.adoberesources.net/alloy/2.19.0/alloy.min.js" async></script>
</head>
<body>
<script>
  !function(e,a,n,t){
    if (a) return;
    var i=e.head;if(i){
      var o=e.createElement("style");
      o.id="alloy-prehiding",o.innerText=n,i.appendChild(o),
        setTimeout(function(){o.parentNode&&o.parentNode.removeChild(o)},t)}}
  (document, document.location.href.indexOf("adobe_authoring_enabled") !== -1, "body { opacity: 0 !important }", 3000);


  !function(n,o){o.forEach(function(o){n[o]||((n.__alloyNS=n.__alloyNS||
    []).push(o),n[o]=function(){var u=arguments;return new Promise(
    function(i,l){n[o].q.push([i,l,u])})},n[o].q=[])})}
  (window,["alloy"]);

  alloy("configure", {
    defaultConsent: "in",
    edgeDomain: "{{edgeDomain}}",
    datastreamId: "8cefc5ca-1c2a-479f-88f2-3d42cc302514",
    orgId: "906E3A095DC834230A495FD6@AdobeOrg",
    debugEnabled: true,
    personalizationStorageEnabled: true,
  });

  let customTraitKey1 = "";
  let customTraitValue1 = "";
  let customTraitKey2 = "";
  let customTraitValue2 = "";

  const setCustomTraitKey1 = (value) => {
    customTraitKey1 = value;
  }

  const setCustomTraitValue1 = (value) => {
    customTraitValue1 = value;
  }

  const setCustomTraitKey2 = (value) => {
    customTraitKey2 = value;
  }

  const setCustomTraitValue2 = (value) => {
    customTraitValue2 = value;
  }


  const renderDecisionsOnLoad = (withEvaluateRulesetCommand = false) => {
    if(withEvaluateRulesetCommand) {
      const context2 = {};

      if (customTraitKey2.length !== 0 && customTraitValue2.length !== 0) {
        context2[customTraitKey2] = customTraitValue2;
      }
      alloy("evaluateRulesets", {
        renderDecisions: true,
        personalization: {
          decisionContext: context2
        }
      })
    } else {
      const context1 = {};

      if (customTraitKey1.length !== 0 && customTraitValue1.length !== 0) {
        context1[customTraitKey1] = customTraitValue1;
      }
      alloy("sendEvent", {
        renderDecisions: true,
        personalization: {
          decisionContext: context1
        }
      });
    }
  };

</script>
<div>
  <h1>In App Messages For Web</h1>
  <div>
    <div style="margin-bottom: 20px;">
      <h3>Option 1: Enter Custom Trait for the Trigger Send Data to the platform </h3>
      <span style="margin-right: 20px;">
                    <label for="input-custom-trait-key1">Key</label>
                    <input id="input-custom-trait-key1" type="text" value="{{customTraitKey1}}" oninput="setCustomTraitKey1(this.value)">
                </span>
      <span style="margin-right: 20px;">
                    <label for="input-custom-trait-value1">Value</label>
                    <input id="input-custom-trait-value1" type="text" value="{{customTraitValue1}}" oninput="setCustomTraitValue1(this.value)">
                </span>
    </div>
    <button onclick="renderDecisionsOnLoad()">sendEvent</button>
  </div>
  <div>
    <div style="margin-bottom: 20px;">
      <h3>Option 2: Enter Custom Trait for the Manual Trigger  </h3>
      <span style="margin-right: 20px;">
                    <label for="input-custom-trait-key2">Key</label>
                    <input id="input-custom-trait-key2" type="text" value="{{customTraitKey2}}" oninput="setCustomTraitKey2(this.value)">
                </span>
      <span style="margin-right: 20px;">
                    <label for="input-custom-trait-value2">Value</label>
                    <input id="input-custom-trait-value2" type="text" value="{{customTraitValue2}}" oninput="setCustomTraitValue2(this.value)">
                </span>
    </div>
    <h4>Click on Send Event first so that rulesets gets loaded in the memory</h4>
    <button id="applyBtn" onclick="renderDecisionsOnLoad(true)">evaluateRulesets</button>
  </div>
</div>
</body>
</html>
